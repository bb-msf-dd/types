// Code generated by protoc-gen-go. DO NOT EDIT.
// source: source.proto

package legacy_pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Source_Version int32

const (
	Source_UNKNOWN_VERSION Source_Version = 0
	Source__0_0_1          Source_Version = 1
)

var Source_Version_name = map[int32]string{
	0: "UNKNOWN_VERSION",
	1: "_0_0_1",
}
var Source_Version_value = map[string]int32{
	"UNKNOWN_VERSION": 0,
	"_0_0_1":          1,
}

func (x Source_Version) Enum() *Source_Version {
	p := new(Source_Version)
	*p = x
	return p
}
func (x Source_Version) String() string {
	return proto.EnumName(Source_Version_name, int32(x))
}
func (x *Source_Version) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Source_Version_value, data, "Source_Version")
	if err != nil {
		return err
	}
	*x = Source_Version(value)
	return nil
}
func (Source_Version) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_source_ce8ba9f1af24d4de, []int{0, 0}
}

type Source_SourceTypes int32

const (
	Source_UNKNOWN_SOURCE_TYPE Source_SourceTypes = 0
	Source_lbry_sd_hash        Source_SourceTypes = 1
)

var Source_SourceTypes_name = map[int32]string{
	0: "UNKNOWN_SOURCE_TYPE",
	1: "lbry_sd_hash",
}
var Source_SourceTypes_value = map[string]int32{
	"UNKNOWN_SOURCE_TYPE": 0,
	"lbry_sd_hash":        1,
}

func (x Source_SourceTypes) Enum() *Source_SourceTypes {
	p := new(Source_SourceTypes)
	*p = x
	return p
}
func (x Source_SourceTypes) String() string {
	return proto.EnumName(Source_SourceTypes_name, int32(x))
}
func (x *Source_SourceTypes) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Source_SourceTypes_value, data, "Source_SourceTypes")
	if err != nil {
		return err
	}
	*x = Source_SourceTypes(value)
	return nil
}
func (Source_SourceTypes) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_source_ce8ba9f1af24d4de, []int{0, 1}
}

type Source struct {
	Version              *Source_Version     `protobuf:"varint,1,req,name=version,enum=legacy_pb.Source_Version" json:"version,omitempty"`
	SourceType           *Source_SourceTypes `protobuf:"varint,2,req,name=sourceType,enum=legacy_pb.Source_SourceTypes" json:"sourceType,omitempty"`
	Source               []byte              `protobuf:"bytes,3,req,name=source" json:"source,omitempty"`
	ContentType          *string             `protobuf:"bytes,4,req,name=contentType" json:"contentType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Source) Reset()         { *m = Source{} }
func (m *Source) String() string { return proto.CompactTextString(m) }
func (*Source) ProtoMessage()    {}
func (*Source) Descriptor() ([]byte, []int) {
	return fileDescriptor_source_ce8ba9f1af24d4de, []int{0}
}
func (m *Source) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Source.Unmarshal(m, b)
}
func (m *Source) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Source.Marshal(b, m, deterministic)
}
func (dst *Source) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Source.Merge(dst, src)
}
func (m *Source) XXX_Size() int {
	return xxx_messageInfo_Source.Size(m)
}
func (m *Source) XXX_DiscardUnknown() {
	xxx_messageInfo_Source.DiscardUnknown(m)
}

var xxx_messageInfo_Source proto.InternalMessageInfo

func (m *Source) GetVersion() Source_Version {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return Source_UNKNOWN_VERSION
}

func (m *Source) GetSourceType() Source_SourceTypes {
	if m != nil && m.SourceType != nil {
		return *m.SourceType
	}
	return Source_UNKNOWN_SOURCE_TYPE
}

func (m *Source) GetSource() []byte {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *Source) GetContentType() string {
	if m != nil && m.ContentType != nil {
		return *m.ContentType
	}
	return ""
}

func init() {
	proto.RegisterType((*Source)(nil), "legacy_pb.Source")
	proto.RegisterEnum("legacy_pb.Source_Version", Source_Version_name, Source_Version_value)
	proto.RegisterEnum("legacy_pb.Source_SourceTypes", Source_SourceTypes_name, Source_SourceTypes_value)
}

func init() { proto.RegisterFile("source.proto", fileDescriptor_source_ce8ba9f1af24d4de) }

var fileDescriptor_source_ce8ba9f1af24d4de = []byte{
	// 232 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0xce, 0x2f, 0x2d,
	0x4a, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0xcc, 0x49, 0x4d, 0x4f, 0x4c, 0xae,
	0x8c, 0x2f, 0x48, 0x52, 0x9a, 0xc3, 0xc4, 0xc5, 0x16, 0x0c, 0x96, 0x13, 0x32, 0xe6, 0x62, 0x2f,
	0x4b, 0x2d, 0x2a, 0xce, 0xcc, 0xcf, 0x93, 0x60, 0x54, 0x60, 0xd2, 0xe0, 0x33, 0x92, 0xd4, 0x83,
	0xab, 0xd3, 0x83, 0xa8, 0xd1, 0x0b, 0x83, 0x28, 0x08, 0x82, 0xa9, 0x14, 0xb2, 0xe5, 0xe2, 0x82,
	0x18, 0x1d, 0x52, 0x59, 0x90, 0x2a, 0xc1, 0x04, 0xd6, 0x27, 0x8b, 0xa9, 0x2f, 0x18, 0xae, 0xa6,
	0x38, 0x08, 0x49, 0x83, 0x90, 0x18, 0x17, 0x1b, 0x84, 0x27, 0xc1, 0xac, 0xc0, 0xa4, 0xc1, 0x13,
	0x04, 0xe5, 0x09, 0x29, 0x70, 0x71, 0x27, 0xe7, 0xe7, 0x95, 0xa4, 0xe6, 0x95, 0x80, 0xcd, 0x65,
	0x51, 0x60, 0xd2, 0xe0, 0x0c, 0x42, 0x16, 0x52, 0xd2, 0xe2, 0x62, 0x87, 0x3a, 0x46, 0x48, 0x98,
	0x8b, 0x3f, 0xd4, 0xcf, 0xdb, 0xcf, 0x3f, 0xdc, 0x2f, 0x3e, 0xcc, 0x35, 0x28, 0xd8, 0xd3, 0xdf,
	0x4f, 0x80, 0x41, 0x88, 0x8b, 0x8b, 0x2d, 0xde, 0x20, 0xde, 0x20, 0xde, 0x50, 0x80, 0x51, 0xc9,
	0x82, 0x8b, 0x1b, 0xc9, 0x01, 0x42, 0xe2, 0x5c, 0xc2, 0x30, 0xf5, 0xc1, 0xfe, 0xa1, 0x41, 0xce,
	0xae, 0xf1, 0x21, 0x91, 0x01, 0xae, 0x02, 0x0c, 0x42, 0x02, 0x5c, 0x3c, 0x39, 0x49, 0x45, 0x95,
	0xf1, 0xc5, 0x29, 0xf1, 0x19, 0x89, 0xc5, 0x19, 0x02, 0x8c, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xf2, 0x96, 0xa2, 0x14, 0x38, 0x01, 0x00, 0x00,
}
